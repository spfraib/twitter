{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "number of cpus: 1\n",
      "memory available (GB): 376.5783004760742\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "\n",
    "workers = os.cpu_count()\n",
    "if 'sched_getaffinity' in dir(os):\n",
    "    workers = len(os.sched_getaffinity(0))\n",
    "print('number of cpus:', workers)\n",
    "\n",
    "import re\n",
    "with open('/proc/meminfo') as f:\n",
    "    meminfo = f.read()\n",
    "matched = re.search(r'^MemTotal:\\s+(\\d+)', meminfo)\n",
    "if matched:\n",
    "    mem_total_kB = int(matched.groups()[0])\n",
    "\n",
    "print('memory available (GB):', mem_total_kB / 1024 / 1024)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "time taken for pickle filtered: 49.76583528518677 seconds\n",
      "time taken for pickle random: 57.09994554519653 seconds\n"
     ]
    }
   ],
   "source": [
    "import time\n",
    "import pandas as pd\n",
    "start_time = time.time()\n",
    "# merged_filtered.to_pickle('../mturk_mar6/boundary/merged_filtered.pickle')\n",
    "merged_filtered = pd.read_pickle('../mturk_mar6/boundary/merged_filtered.pickle')\n",
    "print('time taken for pickle filtered:', str(time.time() - start_time), 'seconds')\n",
    "\n",
    "start_time = time.time()\n",
    "merged_random = pd.read_pickle('../mturk_mar6/boundary/merged_random.pickle')\n",
    "# merged_random.to_pickle('../mturk_mar6/boundary/merged_random.pickle')\n",
    "print('time taken for pickle random:', str(time.time() - start_time), 'seconds')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tweet_id</th>\n",
       "      <th>text</th>\n",
       "      <th>fired</th>\n",
       "      <th>hired</th>\n",
       "      <th>job</th>\n",
       "      <th>laid_off</th>\n",
       "      <th>position</th>\n",
       "      <th>quit</th>\n",
       "      <th>unemployed</th>\n",
       "      <th>work</th>\n",
       "      <th>keyword</th>\n",
       "      <th>search_model</th>\n",
       "      <th>unemployed_model</th>\n",
       "      <th>offer_model</th>\n",
       "      <th>hired_model</th>\n",
       "      <th>loss_model</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>276933934124765184</td>\n",
       "      <td>Damn i have to much homework</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>0.147405</td>\n",
       "      <td>0.241236</td>\n",
       "      <td>0.022598</td>\n",
       "      <td>0.103680</td>\n",
       "      <td>0.100251</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>277143632232992768</td>\n",
       "      <td>Does a bedazzler work on leather? Serious ques...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>0.107181</td>\n",
       "      <td>0.086224</td>\n",
       "      <td>0.027650</td>\n",
       "      <td>0.050369</td>\n",
       "      <td>0.041638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>277150490276540416</td>\n",
       "      <td>RT @porcelain10: Washington Post D Milbank bas...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>0.056218</td>\n",
       "      <td>0.043985</td>\n",
       "      <td>0.068802</td>\n",
       "      <td>0.030496</td>\n",
       "      <td>0.026274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>277151157208637440</td>\n",
       "      <td>Finally off work</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>0.116126</td>\n",
       "      <td>0.249706</td>\n",
       "      <td>0.021815</td>\n",
       "      <td>0.125334</td>\n",
       "      <td>0.155337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>277175194454462465</td>\n",
       "      <td>Irrational: No BioShock PS Vita until Sony and...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>0.051089</td>\n",
       "      <td>0.039643</td>\n",
       "      <td>0.094447</td>\n",
       "      <td>0.028988</td>\n",
       "      <td>0.023893</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             tweet_id                                               text  \\\n",
       "0  276933934124765184                       Damn i have to much homework   \n",
       "1  277143632232992768  Does a bedazzler work on leather? Serious ques...   \n",
       "2  277150490276540416  RT @porcelain10: Washington Post D Milbank bas...   \n",
       "3  277151157208637440                                   Finally off work   \n",
       "4  277175194454462465  Irrational: No BioShock PS Vita until Sony and...   \n",
       "\n",
       "   fired  hired    job  laid_off  position   quit  unemployed  work  keyword  \\\n",
       "0  False  False  False     False     False  False       False  True     True   \n",
       "1  False  False  False     False     False  False       False  True     True   \n",
       "2  False  False  False     False     False  False       False  True     True   \n",
       "3  False  False  False     False     False  False       False  True     True   \n",
       "4  False  False  False     False     False  False       False  True     True   \n",
       "\n",
       "   search_model  unemployed_model  offer_model  hired_model  loss_model  \n",
       "0      0.147405          0.241236     0.022598     0.103680    0.100251  \n",
       "1      0.107181          0.086224     0.027650     0.050369    0.041638  \n",
       "2      0.056218          0.043985     0.068802     0.030496    0.026274  \n",
       "3      0.116126          0.249706     0.021815     0.125334    0.155337  \n",
       "4      0.051089          0.039643     0.094447     0.028988    0.023893  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "merged_filtered.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "No handles with labels found to put in legend.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "offer_model plot filtered time taken: 1.5007743835449219 seconds\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "No handles with labels found to put in legend.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "search_model plot filtered time taken: 1.6083109378814697 seconds\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "No handles with labels found to put in legend.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "unemployed_model plot filtered time taken: 1.7365856170654297 seconds\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "No handles with labels found to put in legend.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hired_model plot filtered time taken: 1.5691146850585938 seconds\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "No handles with labels found to put in legend.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "loss_model plot filtered time taken: 1.6247317790985107 seconds\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAX0AAAEICAYAAACzliQjAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjMsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+AADFEAAAPBklEQVR4nO3df5Bd9VnH8fcDSRotGGsSnZJN2CDQaeQfOitip1PRVg3QhBlFSzpY26FE6+Af2mkH7SjUHzMZHXV0hoqppVio0MI4moVUBm0jnRYYwtR2CJYaMJAdqoQAsQVTSHn84560y5Jkz+79ufu8XzM7uffcc+59vid3P/u93/O950RmIkmq4aRhFyBJGhxDX5IKMfQlqRBDX5IKMfQlqRBDX5IKMfQlqRBDXwtKRHxfRExGxKGIuK1Z9kcR8XRE/Pew62srIq6NiJtbrrsrIt7X75pUw5JhFyDN0aXAjwArM/NIRKwFPgCcnplPDbc0afTZ09dCczrw9cw8Mu3+wfkEfnT4O6BSfMNrJEXEG5thjeciYk9EbI6IjwC/D7wzIr4VEb8G3A2c1ty/sdn2/Ij4UrPtVyLigmnPuysi/jgivgi8AJxxghp2NUNHX2qefzIiVkbEpyLifyPigYgYn7b+m5tlh5p/3zztsfUR8W8R8c2IuBtYNeO1jluz1FOZ6Y8/I/UDLAX2Ar8LLAN+Bvgm8AbgWuDmaeteAExNu78GOAhcRKdT87PN/dXN47uAJ4AfozO8ufQEdexq6vhRYAXwMPB14O3Ntp8EPtGs+0PAs8CvNI9tae6vbB6/F/hz4DXAW5v23DyHmt837P8XfxbHjz19jaLzgVOAbZn5YmZ+DriDTpDO5nJgZ2buzMyXM/NuYDedQD3qxszck5lHMvOlWZ7vE5n5aGYeAj4LPJqZ/5Kd4aXbgHOb9S4G/jMzb2qe9xbga8CmiFgH/Djwe5n57cy8B5icY81STxj6GkWnAfsz8+Vpyx6n0yOezenALzXDJM9FxHPAW4DXT1tn/xxq+Z9pt//vGPdPmVbz4zO2PVrzacCzmfn8jMfmUrPUE87e0Sh6ElgbESdNC/51dIZWZrMfuCkzrzzBOv04n/iTdMJ7unXAPwPfAF4XEa+dFvzrptXRpmapJ+zpaxTdDzwPfCgiljYHNTcBt7bY9mY6Qyo/HxEnR8TyiLggIsb6WC/ATuDsiHhXRCyJiHcCG4A7MvNxOsM1H4mIZRHxFjrtGXbNKsjQ18jJzBeBzcCFwNPAR4F3Z+bXWmy7H7iEzkHgA3R60R+kz+/1zDwIvIPOdwYOAh8C3pGZTzervAv4CeAZ4Bo6B4GHWrNqikyvnCVJVdiTkKRCPJCr0iLiW8d56MLM/MJAi5EGwOEdSSpkJHr6q1atyvHx8WGXIUkLyoMPPvh0Zq6eyzYjEfrj4+Ps3r172GVI0oISETO/EDgrD+RKUiGGviQVYuhLUiE9H9OPiDOADwMrMvPSXj+/JC1GL730ElNTUxw+fPhVjy1fvpyxsTGWLl3a9eu0Cv2IuIHOV8yfysxzpi3fCPwlcDLwt5m5LTMfA66IiNu7rk6SipiamuLUU09lfHyciPju8szk4MGDTE1NsX79+q5fp+3wzo3AxukLIuJk4Do650fZAGyJiA1dVyRJBR0+fJiVK1e+IvABIoKVK1ce8xPAfLQK/eaiD8/MWHwesDczH2tOkHUrnZNGtRIRWyNid0TsPnDgQOuCJWmxmhn4sy2fj24O5K7hlRejmALWNNcQvR44NyJ+53gbZ+b2zJzIzInVq+f03QJJ0jx1cyD3WH96sjnF7K938bxzMn71nfPedt+2i3tYiSSNvm56+lPA2mn3x+hcPUiSNA/HOxdaL8+R1k3oPwCcFRHrI2IZcBmwozdlSVIty5cv5+DBg68K+KOzd5YvX96T12k7ZfMW4AJgVURMAddk5scj4irgLjpTNm/IzD1zefGI2ARsOvPMM+dWtSQtMmNjY0xNTXGsiS1H5+n3QqvQz8wtx1m+k861QeclMyeByYmJCS8ILam0pUuX9mQe/mw8DYMkFWLoS1Ihhr4kFWLoS1IhQw39iNgUEdsPHTo0zDIkqYyhhn5mTmbm1hUrVgyzDEkqw+EdSSrE0JekQgx9SSrE0JekQgx9SSrEKZuSVIhTNiWpEId3JKkQQ1+SCjH0JakQQ1+SCjH0JakQQ1+SCnGeviQV4jx9SSrE4R1JKsTQl6RCDH1JKsTQl6RCDH1JKsTQl6RCDH1JKsQvZ0lSIX45S5IKcXhHkgox9CWpEENfkgox9CWpEENfkgox9CWpEENfkgox9CWpEENfkgox9CWpEM+9I0mFeO4dSSrE4R1JKsTQl6RCDH1JKsTQl6RCDH1JKsTQl6RCDH1JKsTQl6RCDH1JKsTQl6RClgy7gGEav/rOrrbft+3iHlUiSYNhT1+SCjH0JakQT60sSYV4amVJKsThHUkqxNCXpEIMfUkqxNCXpEIMfUkqxNCXpEIMfUkqxNCXpEIMfUkqxNCXpEIMfUkqxNCXpEIMfUkqxNCXpEIMfUkqxNCXpEIMfUkqxNCXpEK8Rq4kFeI1ciWpEId3JKkQQ1+SCjH0JakQQ1+SCjH0JakQQ1+SCjH0JakQQ1+SCjH0JakQQ1+SCjH0JakQQ1+SCjH0JakQQ1+SCjH0JakQQ1+SCjH0JakQQ1+SCjH0JakQQ1+SCjH0JamQJcMuYCEbv/rOeW+7b9vFPaxEktqxpy9JhRj6klSIoS9JhRj6klSIB3IlqQvdTOiAwU/qsKcvSYUY+pJUiKEvSYUY+pJUSM8P5EbEa4GPAi8CuzLzU71+DUnS/LTq6UfEDRHxVEQ8NGP5xoh4JCL2RsTVzeJfAG7PzCuBzT2uV5LUhbbDOzcCG6cviIiTgeuAC4ENwJaI2ACMAfub1b7TmzIlSb3QangnM++JiPEZi88D9mbmYwARcStwCTBFJ/j/nRP8UYmIrcBWgHXr1s21bknqmW7n2i8k3RzIXcP3evTQCfs1wD8AvxgRfw1MHm/jzNyemROZObF69eouypAktdXNgdw4xrLMzOeB93bxvJKkPummpz8FrJ12fwx4srtyJEn91E3oPwCcFRHrI2IZcBmwozdlSZL6oe2UzVuAe4E3RMRURFyRmUeAq4C7gP8APpOZe+by4hGxKSK2Hzp0aK51S5Lmoe3snS3HWb4T2DnfF8/MSWByYmLiyvk+hySpPU/DIEmFGPqSVIihL0mFGPqSVMhQQ9/ZO5I0WEMN/cyczMytK1asGGYZklSGwzuSVIihL0mF9PzKWWqnm1O57tt2cQ8rkVSJPX1JKsTQl6RCnLIpSYU4ZVOSCnF4R5IKMfQlqRBDX5IKMfQlqRBDX5IKMfQlqRDn6UtSIc7Tl6RCHN6RpEIMfUkqxNCXpEI8n76kRaGba1RUYk9fkgox9CWpEENfkgpxTH8B8vq6kubLb+RKUiF+I1eSCnFMX5IKMfQlqRBDX5IKMfQlqRBDX5IKMfQlqRBDX5IKMfQlqRBDX5IK8TQMklSIp2GQpEIc3pGkQjy1cjHdXlLOUzOrn7zkYf/Z05ekQgx9SSrE0JekQgx9SSrE0JekQgx9SSrE0JekQgx9SSrE0JekQvxGruakm29M+m1eafjs6UtSIZ5aWZIKGerwTmZOApMTExNXDrMOSb3jSdNGm8M7klSIoS9JhRj6klSIoS9JhThPXwPjHH9p+OzpS1Ihhr4kFWLoS1IhjulLegW/XLW42dOXpEIMfUkqxOEdLQhO95R6w9CXFiHH5XU8hr4WPT8lSN/jmL4kFWLoS1IhDu9IJ9Dt2LjDQxo1hr40ojwYq34w9KU+Mrg1arwwuiQVMtTQz8zJzNy6YsWKYZYhSWU4e0eSCjH0JakQQ1+SCjH0JakQQ1+SCjH0JakQQ1+SConMHHYNRMQB4PGWq68Cnu5jOQtB9X1g+2u3H9wHR9t/emaunsuGIxH6cxERuzNzYth1DFP1fWD7a7cf3AfdtN/hHUkqxNCXpEIWYuhvH3YBI6D6PrD9qr4P5t3+BTemL0mav4XY05ckzZOhL0mFjGzoR8TGiHgkIvZGxNXHePw1EfHp5vH7I2J88FX2T4v2/3ZEPBwRX42If42I04dRZz/Ntg+mrXdpRGRELKopfG3aHxG/3LwP9kTE3w+6xn5q8TuwLiI+HxFfbn4PLhpGnf0SETdExFMR8dBxHo+I+Ktm/3w1It7U6okzc+R+gJOBR4EzgGXAV4ANM9b5DeD65vZlwKeHXfeA2//TwPc3t9+/mNrfdh80650K3APcB0wMu+4BvwfOAr4MvK65/8PDrnvA7d8OvL+5vQHYN+y6e7wP3gq8CXjoOI9fBHwWCOB84P42zzuqPf3zgL2Z+VhmvgjcClwyY51LgL9rbt8OvC0iYoA19tOs7c/Mz2fmC83d+4CxAdfYb23eAwB/CPwJcHiQxQ1Am/ZfCVyXmc8CZOZTA66xn9q0P4EfaG6vAJ4cYH19l5n3AM+cYJVLgE9mx33AD0bE62d73lEN/TXA/mn3p5plx1wnM48Ah4CVA6mu/9q0f7or6PzFX0xm3QcRcS6wNjPvGGRhA9LmPXA2cHZEfDEi7ouIjQOrrv/atP9a4PKImAJ2Ar85mNJGxlxzAoAlfSunO8fqsc+cW9pmnYWqddsi4nJgAvipvlY0eCfcBxFxEvAXwHsGVdCAtXkPLKEzxHMBnU96X4iIczLzuT7XNght2r8FuDEz/ywifhK4qWn/y/0vbyTMKwNHtac/Bayddn+MV390++46EbGEzse7E30UWkjatJ+IeDvwYWBzZn57QLUNymz74FTgHGBXROyjM6a5YxEdzG37O/BPmflSZv4X8AidPwKLQZv2XwF8BiAz7wWW0zkRWRWtcmKmUQ39B4CzImJ9RCyjc6B2x4x1dgC/2ty+FPhcNkc3FoFZ298MbfwNncBfTGO5R51wH2TmocxclZnjmTlO57jG5szcPZxye67N78A/0jmgT0SsojPc89hAq+yfNu1/AngbQES8kU7oHxholcO1A3h3M4vnfOBQZn5jto1GcngnM49ExFXAXXSO4t+QmXsi4g+A3Zm5A/g4nY9ze+n08C8bXsW91bL9fwqcAtzWHL9+IjM3D63oHmu5Dxatlu2/C/i5iHgY+A7wwcw8OLyqe6dl+z8AfCwifovOsMZ7FlHHj4i4hc7Q3armuMU1wFKAzLyeznGMi4C9wAvAe1s97yLaR5KkWYzq8I4kqQ8MfUkqxNCXpEIMfUkqxNCXpEIMfUkqxNCXpEL+Hy4+HIDi2RldAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYYAAAEICAYAAABbOlNNAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjMsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+AADFEAAAWJ0lEQVR4nO3dfbBc9X3f8fcHmYscqmKekil68BWVogm4bhmuoc2kjV1MkBNkeVzaQUlnnKBBQxriyWQ6DcSZxk0nEe2k6diDWkodqlInKApNXMmRi900BHuKawnHCU9DI4SJFuFICJfYDtgGf/vHrsru5V5p793de47g/ZrZ4ZzfnofvPeju5/7O75yzqSokSTrhjKYLkCS1i8EgSRpgMEiSBhgMkqQBBoMkaYDBIEkaYDBIkgYYDNIsSaaTVJI3NV3LCUnemaQz5LIfTvLxSdek1y+DQZI0wGDQG1KSZU3XILWVwaBWSvJzSZ5J8rUkTyS5KskZSW5J8mSS40l2Jzmvb53fTvKVJC8keSDJpX3v7Uzy75PsS/IN4F1J3pzk3yR5urfO55K8ua+MH0vyZ0meS/KhIWr+cK+Gj/fqfjjJ9ya5NcnRJIeT/FDf8hcl2ZPk+SQHk9zY996bezV/NcljwDtm7euiJP81ybEkTyX54CIPtfQaBoNaJ8kG4GbgHVW1ArgG+DLwQeB9wA8CFwFfBXb0rfopYD3w3cAXgd+YtekfBX4ZWAF8DvhV4HLg+4HzgH8GfKdv+R8ANgBXAf88yfcNUf4m4L8A5wJ/BNxH9/dsJfBLwH/oW/YeoNP7Wa4DfiXJVb33fhH4673XNcAH+o7PGcBe4I97270K+Jkk1wxRn3RqVeXLV6tewDrgKPBu4My+9seBq/rm/xrwbeBNc2zjLUAB5/TmdwJ3971/BvAi8DfnWHe6t+6qvrYvANefou4PA5/pm98EfB1Y1ptf0dvuW4DVwCvAir7ltwM7e9OHgI19720DOr3pK4E/m7XvW4H/1FfHx5v+/+jr9H215qoL6YSqOpjkZ+h+wF2a5D7gZ4G3Ar+bpP+v+leA70nyFbq9gX8IXMirf/lfALzQmz7ct94FwHLgyZOU8pW+6b8E/soQ5f953/SLwHNV9UrfPL3tXAQ8X1Vf61v+aWCmN33RrHqf7pt+K3BRkv/b17YM+OwQ9Umn5KkktVJV/WZV/QDdD8EC/hXdD8r3VNVb+l7Lq+oZuqeJNtPtZZxD969+gPRvtm/6OeAluqdqmnAEOC/Jir62NcAzveln6fYq+t874TDw1KzjsKKqfniyJeuNwmBQ6yTZkOTvJzmL7of3i3R7BncAv5zkrb3lLkyyubfaCuCbwHHgu4BfOdk+quo7wF3Ar/UGcpcl+Tu9fU5cVR0G/hewPcnyJG8HtvLquMhu4NYk5yZZBfx03+pfAP6iN0D/5l7tb0syMEAtLZbBoDY6C7iN7l/1X6E7mPzzwEeAPcCnk3wN+Dzd8+0Ad9M93fIM8FjvvVP5p8DDwH7gebq9kqX8ndhCt2dzBPhd4Ber6jO99/4F3Z/nKeDTdAe0AeidmtoE/K3e+88BH6PbU5JGliq/wU2S9Cp7DJKkAQaDtABJPpXk63O8fr7p2qRx8VSSJGlAq+9juOCCC2p6errpMiTptPLQQw89V1UXLnb9VgfD9PQ0Bw4caLoMSTqtJHn61EvNzzEGSdKAVgZDkk1J7nzhhRdOvbAkaaxaGQxVtbeqtp1zjvfrSNJSa/UYgyS90X3729+m0+nw0ksvvea95cuXs2rVKs4888yx7rOVwZBkE7Bp3bp1TZciSY3qdDqsWLGC6elpklefCVlVHD9+nE6nw9q1a8e6T08lSVKLvfTSS5x//vkDoQCQhPPPP3/OnsSoWhkMkqRXzQ6FU7WPqpXB4FVJktScVo4xVNVeYO/MzMyNp1x4AqZv+b2R1v/ybT8ypkokaem1sscgSXrVfM+0m9Sz7gwGSWqx5cuXc/z48deEwImrkpYvXz72fbbyVJIkqWvVqlV0Oh2OHTv2mvdO3McwbgaDJLXYmWeeOfb7FE6llaeSvCpJkprTymDwBjdJak4rg0GS1ByDQZI0wGCQJA1YsmBIcnGSX09y71LtU5K0cCMFQ5K7khxN8sis9o1JnkhyMMktAFV1qKq2jrI/SdLkjXofw07gduDuEw1JlgE7gKuBDrA/yZ6qemzEfS3IqM87kqQ3qpGCoaoeSDI9q/kK4GBVHQJIsgvYDCxpMDRplFDyAXySmjaJMYaVwOG++Q6wMsn5Se4ALkty63wrJ9mW5ECSA3PdAi5JmqxJPBJjrm+OqKo6Dtx0qpWr6s4kzwKbpqamLh97dZKkk5pEj6EDrO6bXwUcWcgGvPNZkpoziWDYD6xPsjbJFHA9sGchG/BZSZLUnFEvV70HeBDYkKSTZGtVvQzcDNwHPA7srqpHRy9VkrQURr0qacs87fuAfSNst9Gv9pSkN7JWPhLDU0mS1JxWBoODz5LUnFYGgySpOa0MBk8lSVJzWhkMnkqSpOZM4s5njcDnLElqWit7DJ5KkqTmtDIYPJUkSc1pZTBIkppjMEiSBrQyGBxjkKTmtDIYHGOQpOa0MhgkSc0xGCRJAwwGSdKAVgaDg8+S1JxWPhLDL+pZHB+nIWkcWtljkCQ1x2CQJA0wGCRJAwwGSdKAJRt8TnI28O+AbwH3V9VvLNW+JUnDG6nHkOSuJEeTPDKrfWOSJ5IcTHJLr/n9wL1VdSPw3lH2K0manFFPJe0ENvY3JFkG7ADeA1wCbElyCbAKONxb7JUR9ytJmpCRgqGqHgCen9V8BXCwqg5V1beAXcBmoEM3HE663yTbkhxIcuDYsWOjlCdJWoRJjDGs5NWeAXQD4Urgo8DtSX4E2DvfylV1Z5JngU1TU1OXT6A+zcGb4ySdMIlgyBxtVVXfAH5imA1457MkNWcSl6t2gNV986uAIwvZgM9KkqTmTCIY9gPrk6xNMgVcD+xZyAb8oh5Jas6ol6veAzwIbEjSSbK1ql4GbgbuAx4HdlfVowvcrj0GSWrISGMMVbVlnvZ9wL4RtusYgyQ1pJWPxLDHIEnNaWUwOMYgSc1pZTDYY5Ck5rQyGOwxSFJzWvnVnjq9jHLXNHjntNQ2rewxeCpJkprTymDwVJIkNaeVwSBJao7BIEka0MpgcIxBkprTymBwjEGSmtPKYJAkNcdgkCQN8AY3Nc6vFZXapZU9BgefJak5rQwGB58lqTmtDAZJUnMMBknSAINBkjTAYJAkDViyYEhycZJfT3LvUu1TkrRwQwVDkruSHE3yyKz2jUmeSHIwyS0n20ZVHaqqraMUK0mavGFvcNsJ3A7cfaIhyTJgB3A10AH2J9kDLAO2z1r/hqo6OnK10izeHCeN31DBUFUPJJme1XwFcLCqDgEk2QVsrqrtwLWLLSjJNmAbwJo1axa7GUnSIo0yxrASONw33+m1zSnJ+UnuAC5Lcut8y1XVnVU1U1UzF1544QjlSZIWY5RnJWWOtppv4ao6Dtw01IaTTcCmdevWLbI0SdJijdJj6ACr++ZXAUdGK0eS1LRRgmE/sD7J2iRTwPXAnnEU5bOSJKk5w16ueg/wILAhSSfJ1qp6GbgZuA94HNhdVY+OoyifripJzRn2qqQt87TvA/aNtaLudvcCe2dmZm4c97YlSSfXyi/qcfBZS8F7IKS5tfJZSY4xSFJzWhkMjjFIUnNaGQz2GCSpOa0MBklSc1oZDJ5KkqTmtDIYPJUkSc1pZTBIkppjMEiSBrQyGBxjkKTmtPLOZx+JobYb5a5p8M5ptVsrewySpOYYDJKkAQaDJGlAK4PBwWdJak4rg8Eb3CSpOa0MBklScwwGSdIAg0GSNMBgkCQNWNJgSPK+JP8xyX9L8kNLuW9J0nCGfiRGkruAa4GjVfW2vvaNwEeAZcDHquq2+bZRVZ8APpHkXOBXgU8vtnDpdDbKIzV8nIYmbSHPStoJ3A7cfaIhyTJgB3A10AH2J9lDNyS2z1r/hqo62pv+hd56kqSWGToYquqBJNOzmq8ADlbVIYAku4DNVbWdbu9iQJIAtwGfqqovLrZoSdLkjDrGsBI43Dff6bXN56eBdwPXJblprgWSbEtyIMmBY8eOjVieJGmhRn3sduZoq/kWrqqPAh892Qar6s4kzwKbpqamLh+xPknSAo3aY+gAq/vmVwFHRtymJKlBowbDfmB9krVJpoDrgT2jFuWzkiSpOUMHQ5J7gAeBDUk6SbZW1cvAzcB9wOPA7qp6dNSifLqqJDVnIVclbZmnfR+wb2wV4Vd7SlKTWvlIDHsMktScVgaDYwyS1JxWBoMkqTmtDAZPJUlSc0a9wW0iHHyW5ucD+DRprewxSJKa08pg8FSSJDWnlcHgVUmS1JxWBoMkqTmtDAZPJUlSc1oZDJ5KkqTmtDIYJEnNMRgkSQMMBknSAINBkjSglcHgVUmS1ByflSS9gficJQ2jlT0GSVJzDAZJ0gCDQZI0YMmCIcn3Jbkjyb1JfnKp9itJWpihgiHJXUmOJnlkVvvGJE8kOZjklpNto6oer6qbgH8EzCy+ZEnSJA3bY9gJbOxvSLIM2AG8B7gE2JLkkiR/I8knZ72+u7fOe4HPAb8/tp9AkjRWQ12uWlUPJJme1XwFcLCqDgEk2QVsrqrtwLXzbGcPsCfJ7wG/udiiJUmTM8p9DCuBw33zHeDK+RZO8k7g/cBZwL6TLLcN2AawZs2aEcqTJC3GKMGQOdpqvoWr6n7g/lNttKruTPIssGlqauryRVcnSVqUUa5K6gCr++ZXAUdGK6fL72OQpOaMEgz7gfVJ1iaZAq4H9oyjKJ+VJEnNGfZy1XuAB4ENSTpJtlbVy8DNwH3A48Duqnp0cqVKkpbCsFclbZmnfR8nGUheLB+iJ0nNaeUjMTyVJEnNaWUwOPgsSc1pZTBIkprTymDwVJIkNcdvcJM0FL/97Y2jlT0GSVJzWhkMnkqSpOa0Mhi8KkmSmtPKYJAkNcdgkCQNaGUwOMYgSc1pZTA4xiBJzWllMEiSmmMwSJIGGAySpAGtDAYHnyWpOa0MBgefJak5rQwGSVJzDAZJ0gCDQZI0wGCQJA1Y0mBIcnaSh5Jcu5T7lSQNb6hvcEtyF3AtcLSq3tbXvhH4CLAM+FhV3XaKTf0csHuRtUo6TY3y7W/gN8AttWG/2nMncDtw94mGJMuAHcDVQAfYn2QP3ZDYPmv9G4C3A48By0crWZI0SUMFQ1U9kGR6VvMVwMGqOgSQZBewuaq20+1dDEjyLuBs4BLgxST7quo7cyy3DdgGsGbNmuF/EknSWAzbY5jLSuBw33wHuHK+havqQwBJfhx4bq5Q6C13Z5JngU1TU1OXj1CfJGkRRhl8zhxtdaqVqmpnVX3yFMt457MkNWSUYOgAq/vmVwFHRiuny2clSVJzRgmG/cD6JGuTTAHXA3vGUZQ9BklqzlDBkOQe4EFgQ5JOkq1V9TJwM3Af8Diwu6oeHUdR9hgkqTnDXpW0ZZ72fcC+sVbU3e5eYO/MzMyN4962JOnkWvlIDHsMktScVgaDYwyS1JxWBoM9BklqTiuDwR6DJDVnlDufJWlJjPIQPh/At3Ct7DF4KkmSmtPKYPBUkiQ1p5XBIElqjsEgSRrQymBwjEGSmtPKYHCMQZKa08pgkCQ1x2CQJA3wBjdJr2veHLdwrewxOPgsSc1pZTA4+CxJzWllMEiSmmMwSJIGGAySpAEGgyRpwJIFQ5J3JvlskjuSvHOp9itJWpihgiHJXUmOJnlkVvvGJE8kOZjkllNspoCvA8uBzuLKlSRN2rA3uO0EbgfuPtGQZBmwA7ia7gf9/iR7gGXA9lnr3wB8tqr+MMn3AL8G/NhopUuSJmGoYKiqB5JMz2q+AjhYVYcAkuwCNlfVduDak2zuq8BZ872ZZBuwDWDNmjXDlCdJGqNRHomxEjjcN98Brpxv4STvB64B3kK39zGnqroTuBNgZmamRqhPkkbyRn2cxijBkDna5v0gr6rfAX5nqA0nm4BN69atW2RpkqTFGiUYOsDqvvlVwJHRypGk14fTubcxyuWq+4H1SdYmmQKuB/aMoyiflSRJzRn2ctV7gAeBDUk6SbZW1cvAzcB9wOPA7qp6dBxF+XRVSWrOsFclbZmnfR+wb6wVdbe7F9g7MzNz47i3LUk6uVY+EsMegyQ1p5XB4BiDJDWnlcFgj0GSmtPKYLDHIEnNaWUwSJKa08pg8FSSJDUnVe19HFGSY8DTE97NBcBzE97HOFnvZFnvZJ1u9cLpV/MFwNlVdeFiN9DqYFgKSQ5U1UzTdQzLeifLeifrdKsXTr+ax1FvK08lSZKaYzBIkgYYDL3vfjiNWO9kWe9knW71wulX88j1vuHHGCRJg+wxSJIGGAySpAGv62BIsjHJE0kOJrlljvfPSvJbvff/d5LpXvt0kheTfKn3uqMl9f69JF9M8nKS62a994Ekf9p7feA0qPeVvuM7li94GkO9P5vksSR/kuT3k7y17702Ht+T1dvG43tTkod7NX0uySV9793aW++JJNe0ud62fj70LXddkkoy09e2sONbVa/LF7AMeBK4GJgC/hi4ZNYy/wS4ozd9PfBbvelp4JEW1jsNvB24G7iur/084FDvv+f2ps9ta729977ewuP7LuC7etM/2ffvoa3Hd856W3x8/2rf9HuB/96bvqS3/FnA2t52lrW43lZ+PvSWWwE8AHwemFns8X099xiuAA5W1aGq+hawC9g8a5nNwH/uTd8LXJUkS1hjv1PWW1Vfrqo/Ab4za91rgM9U1fNV9VXgM8DGFtfbhGHq/YOq+sve7Ofpfo85tPf4zldvE4ap9y/6Zs8GTlz5shnYVVXfrKqngIO97bW13iYM83kG8C+Bfw281Ne24OP7eg6GlcDhvvlOr23OZar7VaUvAOf33lub5I+S/GGSvzvpYhmu3kmsu1ij7nN5kgNJPp/kfeMtbU4LrXcr8KlFrjsOo9QLLT2+SX4qyZN0P7w+uJB1x2yUeqGFnw9JLgNWV9UnF7rubEN9tedpaq6//Gcn/nzLPAusqarjSS4HPpHk0ll/QYzbMPVOYt3FGnWfa6rqSJKLgf+Z5OGqenJMtc1l6HqT/GNgBvjBha47RqPUCy09vlW1A9iR5EeBXwA+MOy6YzZKva37fEhyBvBvgR9f6LpzeT33GDrA6r75VcCR+ZZJ8ibgHOD5XpfrOEBVPUT3nNz3tqDeSay7WCPts6qO9P57CLgfuGycxc1hqHqTvBv4EPDeqvrmQtYds1Hqbe3x7bMLONGTae3x7fP/623p58MK4G3A/Um+DPxtYE9vAHrhx3cpB1CWeLDmTXQHCdfy6mDNpbOW+SkGB59396YvpDc4Q3ew5xngvKbr7Vt2J68dfH6K7sDoub3pNtd7LnBWb/oC4E+ZYyCtgX8Pl9H9JV8/q72Vx/ck9bb1+K7vm94EHOhNX8rg4OghJj/4PEq9rf586C1/P68OPi/4+E7sB2nDC/hh4P/0fnk+1Gv7Jbp/XQEsB36b7mDMF4CLe+3/AHi0dzC/CGxqSb3voJv+3wCOA4/2rXtD7+c4CPxEm+sFvh94uHd8Hwa2tqTe/wH8OfCl3mtPy4/vnPW2+Ph+pPd79SXgD/o/2Oj2ep4EngDe0+Z62/r5MGvZ++kFw2KOr4/EkCQNeD2PMUiSFsFgkCQNMBgkSQMMBknSAINBkjTAYJAkDTAYJEkD/h+zweeABfDMJQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "boundary = 0.5\n",
    "topN = 100\n",
    "columns = ['offer_model','search_model','unemployed_model','hired_model','loss_model']\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "for column in columns:\n",
    "    boundary_data = merged_filtered\n",
    "    boundary_data['dist_point5'] = abs(merged_filtered[column] - boundary)\n",
    "\n",
    "    start_time = time.time()\n",
    "    print(column, 'subtraction time taken:', str(time.time() - start_time), 'seconds')\n",
    "\n",
    "    start_time = time.time()\n",
    "    boundary_data = boundary_data.sort_values(by=['dist_point5'], ascending=True)\n",
    "    print(column, 'sorting time taken:', str(time.time() - start_time), 'seconds')\n",
    "\n",
    "    start_time = time.time()\n",
    "    boundary_data[:topN].to_csv('../mturk_mar6/boundary/filtered_{}.csv'.format(column))\n",
    "    # print(all_filtered_boundary['text'])\n",
    "    print(column, 'write csv time taken:', str(time.time() - start_time), 'seconds')\n",
    "\n",
    "    start_time = time.time()\n",
    "    fig = plt.figure()\n",
    "    ax = plt.subplot(111)\n",
    "    plt.hist(merged_filtered[column], bins=20, density = True)\n",
    "    ax.set_yscale('log')\n",
    "    # plt..yscale(value)\n",
    "    plt.title(column)\n",
    "    ax.legend()\n",
    "    #plt.show()\n",
    "    plt.savefig('../mturk_mar6/boundary/filtered_{}_log.png'.format(column))\n",
    "\n",
    "    print(column, 'plot filtered time taken:', str(time.time() - start_time), 'seconds')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "offer_model subtraction time taken: 5.0067901611328125e-06 seconds\n",
      "offer_model sorting time taken: 89.33081579208374 seconds\n",
      "offer_model write csv time taken: 0.006337165832519531 seconds\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "No handles with labels found to put in legend.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "offer_model plot random time taken: 1.5453321933746338 seconds\n",
      "search_model subtraction time taken: 5.245208740234375e-06 seconds\n",
      "search_model sorting time taken: 80.97928738594055 seconds\n",
      "search_model write csv time taken: 0.01869821548461914 seconds\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "No handles with labels found to put in legend.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "search_model plot random time taken: 1.6247198581695557 seconds\n",
      "unemployed_model subtraction time taken: 5.245208740234375e-06 seconds\n",
      "unemployed_model sorting time taken: 80.69047117233276 seconds\n",
      "unemployed_model write csv time taken: 0.009378194808959961 seconds\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "No handles with labels found to put in legend.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "unemployed_model plot random time taken: 1.7465968132019043 seconds\n",
      "hired_model subtraction time taken: 3.5762786865234375e-06 seconds\n",
      "hired_model sorting time taken: 80.87389540672302 seconds\n",
      "hired_model write csv time taken: 0.11455154418945312 seconds\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "No handles with labels found to put in legend.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hired_model plot random time taken: 1.6062498092651367 seconds\n",
      "loss_model subtraction time taken: 3.0994415283203125e-06 seconds\n",
      "loss_model sorting time taken: 80.9403624534607 seconds\n",
      "loss_model write csv time taken: 0.006195783615112305 seconds\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "No handles with labels found to put in legend.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "loss_model plot random time taken: 1.665257453918457 seconds\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "boundary = 0.5\n",
    "topN = 100\n",
    "columns = ['offer_model','search_model','unemployed_model','hired_model','loss_model']\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "for column in columns:\n",
    "    # all_random_boundary = merged_random.loc[(merged_random[column] >= threshold - boundary_width) &\n",
    "                                                # (merged_random[column] <= threshold + boundary_width)]\n",
    "    boundary_data = merged_random\n",
    "    boundary_data['dist_point5'] = abs(merged_random[column] - boundary)\n",
    "\n",
    "    start_time = time.time()\n",
    "    print(column, 'subtraction time taken:', str(time.time() - start_time), 'seconds')\n",
    "\n",
    "    start_time = time.time()\n",
    "    boundary_data = boundary_data.sort_values(by=['dist_point5'], ascending=True)\n",
    "    print(column, 'sorting time taken:', str(time.time() - start_time), 'seconds')\n",
    "\n",
    "    start_time = time.time()\n",
    "    boundary_data[:topN].to_csv('../mturk_mar6/boundary/random_{}.csv'.format(column))\n",
    "    # print(all_random_boundary['text'])\n",
    "    print(column, 'write csv time taken:', str(time.time() - start_time), 'seconds')\n",
    "\n",
    "    start_time = time.time()\n",
    "    fig = plt.figure()\n",
    "    ax = plt.subplot(111)\n",
    "    plt.hist(merged_random[column], bins=20, density = True)\n",
    "    ax.set_yscale('log')\n",
    "    # plt..yscale(value)\n",
    "    plt.title(column)\n",
    "    ax.legend()\n",
    "    #plt.show()\n",
    "    plt.savefig('../mturk_mar6/boundary/random_{}_log.png'.format(column))\n",
    "\n",
    "    print(column, 'plot random time taken:', str(time.time() - start_time), 'seconds')\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
